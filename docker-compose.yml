version: "3.9"
x-database-url: &db_url
  postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
services:
  # fastapi_app:
  #   build:
  #     context: ./backend/fastapi
  #     dockerfile: Dockerfile
  #   container_name: fastapi_app
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - db
  #   environment:
  #     DATABASE_URL: *db_url
  #   networks:
  #     - app_network
  goauth:
    build:
      context: ./backend/auth
      dockerfile: Dockerfile
    container_name: go_auth_service
    ports:
      - "3001:3001"
    depends_on:
      - db
    environment:
      AUTH_SERVER_PORT: 3001
      DATABASE_URL: *db_url
      DISCUSSION_APP_SESSION_KEY: ${DISCUSSION_APP_SESSION_KEY}
    networks:
      - app_network
  db:
    image: postgres:15
    container_name: app_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test:
        - "CMD-SHELL"
        - "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
networks:
  app_network:
    driver: bridge
volumes:
  postgres_data:
